module.exports = {
  /*
   * All rules excluding any that are deprecated.
   */
  list: [
    "comma-dangle",
    "no-cond-assign",
    "no-console",
    "no-constant-condition",
    "no-control-regex",
    "no-debugger",
    "no-dupe-args",
    "no-dupe-keys",
    "no-duplicate-case",
    "no-empty-class",
    "no-empty",
    "no-ex-assign",
    "no-extra-boolean-cast",
    "no-extra-parens",
    "no-extra-semi",
    "no-func-assign",
    "no-inner-declarations",
    "no-invalid-regexp",
    "no-irregular-whitespace",
    "no-negated-in-lhs",
    "no-obj-calls",
    "no-regex-spaces",
    "no-reserved-keys",
    "no-sparse-arrays",
    "no-unreachable",
    "use-isnan",
    "valid-jsdoc",
    "valid-typeof",
    "block-scoped-var",
    "complexity",
    "consistent-return",
    "curly",
    "default-case",
    "dot-notation",
    "dot-location",
    "eqeqeq",
    "guard-for-in",
    "no-alert",
    "no-caller",
    "no-div-regex",
    "no-else-return",
    "no-empty-label",
    "no-eq-null",
    "no-eval",
    "no-extend-native",
    "no-extra-bind",
    "no-fallthrough",
    "no-floating-decimal",
    "no-implied-eval",
    "no-iterator",
    "no-labels",
    "no-lone-blocks",
    "no-loop-func",
    "no-multi-spaces",
    "no-multi-str",
    "no-native-reassign",
    "no-new-func",
    "no-new-wrappers",
    "no-new",
    "no-octal-escape",
    "no-octal",
    "no-param-reassign",
    "no-process-env",
    "no-proto",
    "no-redeclare",
    "no-return-assign",
    "no-script-url",
    "no-self-compare",
    "no-sequences",
    "no-throw-literal",
    "no-unused-expressions",
    "no-void",
    "no-warning-comments",
    "no-with",
    "radix",
    "vars-on-top",
    "wrap-iife",
    "yoda",
    "strict",
    "no-catch-shadow",
    "no-delete-var",
    "no-label-var",
    "no-shadow-restricted-names",
    "no-shadow",
    "no-undef-init",
    "no-undef",
    "no-undefined",
    "no-unused-vars",
    "no-use-before-define",
    "handle-callback-err",
    "no-mixed-requires",
    "no-new-require",
    "no-path-concat",
    "no-process-exit",
    "no-restricted-modules",
    "no-sync",
    "brace-style",
    "camelcase",
    "comma-spacing",
    "comma-style",
    "consistent-this",
    "eol-last",
    "func-names",
    "func-style",
    "indent",
    "key-spacing",
    "linebreak-style",
    // "max-nested-callbacks", - this requires a threshold, ignore for now
    "new-cap",
    "new-parens",
    "newline-after-var",
    "no-array-constructor",
    "no-continue",
    "no-inline-comments",
    "no-lonely-if",
    "no-mixed-spaces-and-tabs",
    "no-multiple-empty-lines",
    "no-nested-ternary",
    "no-new-object",
    "no-spaced-func",
    "no-ternary",
    "no-trailing-spaces",
    "no-underscore-dangle",
    "no-unneeded-ternary",
    "no-wrap-func",
    "one-var",
    "operator-assignment",
    "operator-linebreak",
    "padded-blocks",
    "quote-props",
    "quotes",
    "semi-spacing",
    "semi",
    "sort-vars",
    "space-after-keywords",
    "space-before-blocks",
    "space-before-function-paren",
    "space-in-brackets",
    "space-in-parens",
    "space-infix-ops",
    "space-return-throw-case",
    "space-unary-ops",
    "spaced-line-comment",
    "wrap-regex",
    "generator-star-spacing",
    "no-var",
    "object-shorthand",
    "max-depth",
    "max-len",
    "max-params",
    "max-statements",
    "no-bitwise",
    "no-plusplus"
  ],

  /*
   * Enumerate options. Checking non-default options is not yet implemented.
   *
   * In the case of an array, the first value is the default. Subsequent values
   * are additional options that should be tried.
   *
   * In the case of an object, each key has an array of values. The first value
   * is the default, and subsequent values are additional options.
   *
   * Options that follow another pattern or do not have enumerable values are
   * excluded.
   */
  modes: {
    "brace-style": [ "1tbs", "stroustrup" ],
    "camelcase": { "properties": [ "always", "never" ] },
    "comma-dangle": [ "never", "always", "always-multiline" ],
    "comma-spacing": { "before": [ false, true ], "after": [ true, false ] },
    "comma-style": [ "last", "first" ],
    "curly": [ "all", "multi", "multi-line" ],
    "dot-location": [ "object", "property" ],
    "eqeqeq": [ null, "smart", "allow-null" ],
    "func-style": [ "expression", "declaration" ],
    "generator-star-spacing": [ "before", "after", "both", "neither" ],
    "indent": [ 4, 2, "tab" ], // there is more, but let's check these for now
    "linebreak-style": [ "unix", "windows" ],
    "new-cap": { "newIsCap": [ true, false ], "capIsNew": [ true, false ] },
    "no-cond-assign": [ "except-parens", "always" ],
    "no-inner-declarations": [ "functions", "both" ],
    "no-mixed-spaces-and-tabs": [ null, "smart-tabs" ],
    "no-multiple-empty-lines": { "max": [ 1, 2 ] }, // let's check these for now
    "no-trailing-spaces": { skipBlankLines: [ false, true ] },
    "no-unused-vars": { "vars": [ "all", "local" ], "args": [ "after-used", "all", "none" ] },
    "object-shorthand": [ "always", "methods", "properties", "never" ],
    "one-var": [ "always", "never" ], // object option skipped
    "operator-assignment": [ "always", "never" ],
    "operator-linebreak": [ "after", "before", "none" ],
    "padded-blocks": [ "always", "never" ],
    "quote-props": [ "always", "as-needed" ],
    "quotes": [ "double", "single", "backtick" ],
    "semi": [ "always", "never" ],
    "semi-spacing": { "before": [ false, true ], "after": [ true, false ] },
    "sort-vars": { "ignoreCase": [ false, true ] },
    "space-before-function-paren": [ "always", "never" ], // object option skipped
    "space-in-brackets": [ "never", "always" ],
    "space-in-parens": [ "never", "always" ], // exceptions skipped
    "space-infix-ops": { "int32Hint": [ false, true ] },
    "space-unary-ops": { "words": [ true, false ], "nonwords": [ false, true ] },
    "strict": [ null, "never", "global", "function" ],
    "wrap-iife": [ "outside", "inside", "any" ]
  },

  /*
   * Rules that default their error level to 0. Omitting rules based on their
   * defaults is not yet implemented.
   */
  defaultsOff: [
    "no-comma-dangle",
    "no-extra-parens",
    "no-reserved-keys",
    "valid-jsdoc",
    "block-scoped-var",
    "complexity",
    "default-case",
    "dot-location",
    "guard-for-in",
    "no-div-regex",
    "no-else-return",
    "no-eq-null",
    "no-floating-decimal",
    "no-param-reassign",
    "no-process-env",
    "no-self-compare",
    "no-throw-literal",
    "no-void",
    "no-warning-comments",
    "radix",
    "vars-on-top",
    "wrap-iife",
    "no-undefined",
    "handle-callback-err",
    "no-mixed-requires",
    "no-new-require",
    "no-path-concat",
    "no-restricted-modules",
    "no-sync",
    "brace-style",
    "comma-style",
    "consistent-this",
    "func-names",
    "func-style",
    "indent",
    "linebreak-style",
    // "max-nested-callbacks", - this requires a threshold, ignore for now
    "newline-after-var",
    "no-continue",
    "no-inline-comments",
    "no-lonely-if",
    "no-multiple-empty-lines",
    "no-nested-ternary",
    "no-space-before-semi",
    "no-ternary",
    "no-unneeded-ternary",
    "one-var",
    "operator-assignment",
    "operator-linebreak",
    "padded-blocks",
    "quote-props",
    "sort-vars",
    "space-after-function-name",
    "space-after-keywords",
    "space-before-blocks",
    "space-before-function-paren",
    "space-before-function-parentheses",
    "space-in-brackets",
    "space-in-parens",
    "spaced-line-comment",
    "wrap-regex",
    "generator-star-spacing",
    "generator-star",
    "no-var",
    "object-shorthand",
    "max-depth",
    "max-len",
    "max-params",
    "max-statements",
    "no-bitwise",
    "no-plusplus"
  ]
};
